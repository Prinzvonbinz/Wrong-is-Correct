<!DOCTYPE html>
<html lang="de">
<head>
  <meta charset="UTF-8">
  <title>Wrong is Correct (WiC)</title>
  <style>
    body { font-family: Arial, sans-serif; max-width: 500px; margin: 0 auto; }
    .hidden { display: none; }
    label { display: block; margin-top: 10px; }
    input[type="number"] { width: 100px; }
    ul { list-style-type: none; padding: 0; }
    .spieler { display: flex; align-items: center; margin-bottom: 5px; }
    .spieler span { flex: 1; }
    button { margin: 5px 0; }
    #frage { font-size: 1.2em; margin: 20px 0; }
    #loesung { margin: 10px 0; font-weight: bold; }
    #splitDisplay { color: green; font-weight: bold; }
  </style>
</head>
<body>
  <h1>Wrong is Correct (WiC)</h1>
  <div id="setup">
    <label>
      Startsumme (‚Ç¨): 
      <input id="summe" type="number" min="1" step="1">
    </label>
    <label>
      Anstieg in Prozent (%): 
      <input id="prozent" type="number" min="1" step="1">
    </label>
    <label>
      Split Modus: 
      <input id="split" type="checkbox">
    </label>
    <hr>
    <label>
      Name hinzuf√ºgen:
      <input id="nameInput" type="text" maxlength="20">
      <button onclick="addName()">Hinzuf√ºgen</button>
    </label>
    <ul id="nameList"></ul>
    <button onclick="startGame()" id="startBtn">Start</button>
  </div>

  <div id="game" class="hidden">
    <div id="spielerInfo"></div>
    <div id="frage"></div>
    <button onclick="zeigeLoesung()" id="loesungBtn">L√∂sung anzeigen</button>
    <div id="loesungDiv" class="hidden">
      <div id="loesung"></div>
      <button onclick="antwort(false)">Falsch</button>
      <button onclick="antwort(true)">Richtig</button>
    </div>
    <div id="splitDisplay"></div>
    <button onclick="neuesSpiel()">Neues Spiel</button>
  </div>

  <script>
    // --- LocalStorage Key ---
    const LS_KEY = 'wic_data';

    // --- Beispiel-Fragen (hier kannst du sp√§ter mehr einbauen oder zuf√§llig generieren) ---
    const fragen = [
      { frage: 'Was ist die Hauptstadt von Frankreich?', loesung: 'Paris' },
      { frage: 'Wieviel ist 5 + 7?', loesung: '12' },
      { frage: 'Welche Farbe hat der Himmel?', loesung: 'Blau' }
    ];

    // --- Globale Variablen ---
    let spieler = [];
    let einstellungen = { summe: 0, prozent: 0, split: false };
    let aktSumme = 0;
    let aktuellerSpieler = 0;
    let aktuellerFrageIndex = 0;
    let gewonnen = false;

    // --- Setup laden ---
    function ladeDaten() {
      const data = JSON.parse(localStorage.getItem(LS_KEY)) || {};
      spieler = data.spieler || [];
      einstellungen = data.einstellungen || { summe: 0, prozent: 0, split: false };
      document.getElementById('summe').value = einstellungen.summe || '';
      document.getElementById('prozent').value = einstellungen.prozent || '';
      document.getElementById('split').checked = einstellungen.split || false;
      updateNames();
    }

    // --- Namen hinzuf√ºgen und entfernen ---
    function addName() {
      const nameInput = document.getElementById('nameInput');
      const name = nameInput.value.trim();
      if (name && !spieler.includes(name)) {
        spieler.push(name);
        speichereDaten();
        updateNames();
      }
      nameInput.value = '';
    }

    function removeName(idx) {
      spieler.splice(idx, 1);
      speichereDaten();
      updateNames();
    }

    function updateNames() {
      const list = document.getElementById('nameList');
      list.innerHTML = '';
      spieler.forEach((n, i) => {
        const li = document.createElement('li');
        li.className = 'spieler';
        li.innerHTML = `<span>${n}</span> <button onclick="removeName(${i})">Entfernen</button>`;
        list.appendChild(li);
      });
    }

    function speichereDaten() {
      localStorage.setItem(LS_KEY, JSON.stringify({ spieler, einstellungen }));
    }

    // --- Spiel starten ---
    function startGame() {
      const summe = parseFloat(document.getElementById('summe').value);
      const prozent = parseFloat(document.getElementById('prozent').value);
      const split = document.getElementById('split').checked;

      if (isNaN(summe) || summe <= 0 || isNaN(prozent) || prozent <= 0 || spieler.length < 2) {
        alert('Bitte Startsumme, Prozente eingeben und mindestens 2 Spieler hinzuf√ºgen!');
        return;
      }

      einstellungen = { summe, prozent, split };
      speichereDaten();

      aktSumme = summe;
      aktuellerSpieler = 0;
      aktuellerFrageIndex = 0;
      gewonnen = false;
      document.getElementById('setup').classList.add('hidden');
      document.getElementById('game').classList.remove('hidden');
      document.getElementById('splitDisplay').innerHTML = '';
      naechsteFrage();
    }

    // --- Neue Runde / Frage ---
    function naechsteFrage() {
      if (fragen.length === 0) {
        document.getElementById('frage').innerText = 'Keine Fragen definiert!';
        return;
      }
      aktuellerFrageIndex = Math.floor(Math.random() * fragen.length);
      zeigeSpielerInfo();
      document.getElementById('frage').innerText = fragen[aktuellerFrageIndex].frage;
      document.getElementById('loesungDiv').classList.add('hidden');
      document.getElementById('loesungBtn').disabled = false;
    }

    function zeigeSpielerInfo() {
      document.getElementById('spielerInfo').innerText = `Dran: ${spieler[aktuellerSpieler]} | Pot: ${aktSumme.toFixed(2)} ‚Ç¨`;
    }

    // --- L√∂sung anzeigen ---
    function zeigeLoesung() {
      document.getElementById('loesung').innerText = fragen[aktuellerFrageIndex].loesung;
      document.getElementById('loesungDiv').classList.remove('hidden');
      document.getElementById('loesungBtn').disabled = true;
    }

    // --- Antwort werten ---
    function antwort(richtig) {
      if (richtig) {
        gewonnen = true;
        zeigeGewinner();
      } else {
        // Falsch beantwortet: Summe erh√∂hen, n√§chster Spieler
        aktSumme += aktSumme * (einstellungen.prozent / 100);
        aktuellerSpieler = (aktuellerSpieler + 1) % spieler.length;
        naechsteFrage();
      }
    }

    // --- Gewinn anzeigen ---
    function zeigeGewinner() {
      const gewinner = spieler[aktuellerSpieler];
      document.getElementById('spielerInfo').innerText = `üèÜ ${gewinner} gewinnt ${aktSumme.toFixed(2)} ‚Ç¨!`;
      if (einstellungen.split) {
        const restSpieler = spieler.filter((n, i) => i !== aktuellerSpieler);
        const betrag = aktSumme / restSpieler.length;
        document.getElementById('splitDisplay').innerText = 
          `Jeder zahlt: ${betrag.toFixed(2)} ‚Ç¨ (${restSpieler.join(', ')})`;
      }
      document.getElementById('frage').innerText = '';
      document.getElementById('loesungDiv').classList.add('hidden');
      document.getElementById('loesungBtn').disabled = true;
    }

    // --- Neues Spiel ---
    function neuesSpiel() {
      document.getElementById('setup').classList.remove('hidden');
      document.getElementById('game').classList.add('hidden');
    }

    // --- Beim Laden: ---
    ladeDaten();
  </script>
</body>
</html>
